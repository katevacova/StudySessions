generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ban {
  id         String   @id @default(uuid())
  expiration DateTime
  issuedById String
  reason     String
  userId     String
}

model Group {
  id       String         @id @default(uuid())
  name     String
  ownerId  String
  members  GroupMembers[]
  sessions Session[]
}

model GroupMembers {
  groupId String
  userId  String

  group Group @relation(fields: [groupId], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([groupId, userId])
}

model LoginSessions {
  id         String   @id @default(uuid())
  expiration DateTime
  userId     String
}

model Session {
  id             String    @id @default(uuid())
  subject        String
  groupId        String
  repeatSeriesId String?   @default(uuid())
  repeatPeriod   String
  duration       Int
  realDuration   Int
  start          DateTime?
  group          Group     @relation(fields: [groupId], references: [id], onDelete: Cascade)
}

model User {
  id      String         @id @default(uuid())
  email   String         @unique
  isOwner Boolean
  name    String
  groups  GroupMembers[]
  Auth    Auth[]
}

model Auth {
  id     String @id @default(uuid())
  userId String @unique
  pwHash String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
